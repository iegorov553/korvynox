// ============================
// Korvynox ‚Äî Stalker Site v4
// Next.js 15 App Router with dynamic threat text
// ============================

// -------- app/page.tsx --------
"use client";
import Head from "next/head";
import { useEffect, useState } from "react";

type BrowserInfo = {
  userAgent: string;
  language: string;
  timezone: string;
  screenRes: string;
  platform: string;
  memory: number;
  connection: { type: string; downlink: number };
  battery: { level: number; charging: boolean } | null;
};

type LocationInfo = {
  ip: string;
  city: string;
  region: string;
  country_name: string;
  org: string;
};

export default function Page() {
  const [info, setInfo] = useState<BrowserInfo | null>(null);
  const [location, setLocation] = useState<LocationInfo | null>(null);

  useEffect(() => {
    const ua = navigator.userAgent;
    const language = navigator.language;
    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    const screenRes = `${window.screen.width}x${window.screen.height}`;
    const platform = navigator.platform;
    const memory = (navigator as any).deviceMemory || 0;
    const conn = (navigator as any).connection || {};
    const connection = {
      type: conn.effectiveType || "unknown",
      downlink: conn.downlink || 0,
    };

    const batteryPromise = (navigator as any).getBattery
      ? (navigator as any).getBattery().then((bat: any) => ({ level: bat.level * 100, charging: bat.charging }))
      : Promise.resolve(null);

    const browserPromise = batteryPromise.then((battery) => ({
      userAgent: ua,
      language,
      timezone,
      screenRes,
      platform,
      memory,
      connection,
      battery,
    }));

    const geoPromise = fetch("https://ipapi.co/json").then((res) => res.json());

    Promise.all([browserPromise, geoPromise])
      .then(([browserInfo, loc]) => {
        setInfo(browserInfo);
        setLocation(loc);
        fetch("/api/report", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ browserInfo, location: loc }),
        }).catch(() => {});
      })
      .catch(() => {
        // ignore errors
      });
  }, []);

  if (!info || !location) {
    return <p className="p-6">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö‚Ä¶</p>;
  }

  const deviceType = /Mobi|Android/i.test(info.userAgent)
    ? "–º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"
    : "–∫–æ–º–ø—å—é—Ç–µ—Ä–∞";
  let browserName = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞";
  if (info.userAgent.includes("Firefox")) browserName = "Firefox";
  else if (info.userAgent.includes("Edg")) browserName = "Edge";
  else if (info.userAgent.includes("Chrome")) browserName = "Chrome";
  else if (info.userAgent.includes("Safari")) browserName = "Safari";

  const batteryPct = info.battery ? Math.round(info.battery.level) : 0;
  const lowBattery = batteryPct < 20;
  const slowNet = info.connection.downlink < 2;
  const memGB = Math.round(info.memory);
  const lowMem = memGB < 4;

  return (
    <>
      <Head>
        <title>Korvynox | –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</title>
        <meta name="description" content="–°–∞–π—Ç —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ" />
        <meta name="robots" content="noindex,nofollow" />
      </Head>

      <main className="p-6 max-w-xl mx-auto text-lg">
        <div className="bg-red-100 border border-red-300 p-6 rounded-lg">
          <p className="font-bold text-xl">üö® –í–ù–ò–ú–ê–ù–ò–ï ‚Äî –ú–û–®–ï–ù–ù–ò–ö!</p>
          <p className="mt-4">‚Äì –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {deviceType} (–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ ‚Äî {info.platform}, –±—Ä–∞—É–∑–µ—Ä ‚Äî {browserName})</p>
          <p>‚Äì IP-–∞–¥—Ä–µ—Å: {location.ip} ({location.city}, {location.region}, {location.country_name})</p>
          <p>‚Äì –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {info.language}; —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {info.timezone}</p>
          <p>‚Äì –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞: {info.screenRes}</p>

          {lowBattery ? (
            <p className="mt-4 text-red-700">
              ‚ö†Ô∏è –ü—Ä–∏ –∑–∞—Ä—è–¥–µ {batteryPct}% —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–æ–∂–µ—Ç –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –ø–∏—Ç–∞–Ω–∏—é!
            </p>
          ) : (
            <p className="mt-4 text-green-700">
              ‚úÖ –ë–∞—Ç–∞—Ä–µ—è: {batteryPct}% ‚Äî –∑–∞—Ä—è–¥–∞ —Ö–≤–∞—Ç–∏—Ç –µ—â—ë –Ω–∞ –≤—Ä–µ–º—è.
            </p>
          )}

          {slowNet ? (
            <p className="mt-2 text-red-700">
              ‚ö†Ô∏è –ö–∞–Ω–∞–ª —Å–≤—è–∑–∏ –º–µ–¥–ª–µ–Ω–Ω—ã–π ({info.connection.downlink} –ú–±–∏—Ç/—Å). –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π.
            </p>
          ) : (
            <p className="mt-2 text-green-700">
              ‚úÖ –ö–∞–Ω–∞–ª —Å–≤—è–∑–∏: {info.connection.downlink} –ú–±–∏—Ç/—Å ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω–æ.
            </p>
          )}

          {lowMem ? (
            <p className="mt-2 text-red-700">
              ‚ö†Ô∏è –û–ó–£: {memGB} –ì–ë ‚Äî –ø—Ä–∏ –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–∞—Ö –¥–∞–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã —Å–±–æ–∏.
            </p>
          ) : (
            <p className="mt-2 text-green-700">
              ‚úÖ –û–ó–£: {memGB} –ì–ë ‚Äî —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫.
            </p>
          )}

          <p className="mt-6">
            –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç–Ω—ã–π –º–æ–¥—É–ª—å. –í–∞—à–∏ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Ç—â–∞—Ç–µ–ª—å–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç—Å—è.
          </p>
        </div>
      </main>
    </>
  );
}
